{"version":3,"sources":["Blocks.js","Reset.js","Counter.js","App.js","index.js"],"names":["Blocks","props","style","float","onClick","clickTitle","item","id","width","height","border","backgroundColor","show","margin","Reset","blockReset","length","marginTop","className","set","block","map","Counter","newCheck","filter","padding","fontSize","App","useState","baseToPrint","setBaseToPrint","toggle","key","ReactDOM","render","document","getElementById"],"mappings":"4KAqBeA,MAnBf,SAAgBC,GAEd,OACE,yBAAKC,MAAO,CAACC,MAAO,SAClB,yBACEC,QAAS,WAAKH,EAAMI,WAAWJ,EAAMK,KAAKC,KAC1CL,MAAO,CACLM,MAAO,IACPC,OAAQ,IACRC,OAAQ,iBACRC,gBAAiBV,EAAMK,KAAKM,KAAO,QAAU,QAC7CC,OAAQ,QCWHC,MAtBf,SAAeb,GAEb,IAAMc,EAAad,EAAMK,KAEzB,OAAO,6BACkB,IAAtBS,EAAWC,QACV,4BACEd,MAAO,CAACe,UAAW,IACnBC,UAAU,kBACVd,QAAS,WACPH,EAAMkB,IACJlB,EAAMmB,MAAMC,KAAI,SAACf,GACf,OAAO,2BAAIA,GAAX,IAAiBM,MAAM,UAN/B,+ECmBSU,MAxBf,SAAiBrB,GAEf,IAAMsB,EAAWtB,EAAMK,KAAKkB,QAAO,SAAClB,GAClC,OAAkB,IAAdA,EAAKM,QAMX,OAAO,6BACL,yBAAKV,MAAO,CACVQ,OAAO,kBACPe,QAAS,GACTC,SAAU,GACVT,UAAW,GACXT,MAAO,MALT,gGAOqBe,EAASP,QAE9B,6BACE,kBAAC,EAAD,CAAOV,KAAMiB,EAAUJ,IAAKlB,EAAMkB,IAAKC,MAAOnB,EAAMK,UCgD3CqB,MAnEf,WACE,IADa,EAwCuBC,mBAvCnB,CACf,CACErB,GAAI,EACJK,MAAM,GAER,CACEL,GAAG,EACHK,MAAM,GAER,CACEL,GAAG,EACHK,MAAM,GAER,CACEL,GAAG,EACHK,MAAM,GAER,CACEL,GAAG,EACHK,MAAM,GAER,CACEL,GAAG,EACHK,MAAM,GAER,CACEL,GAAG,EACHK,MAAM,GAER,CACEL,GAAG,EACHK,MAAM,GAER,CACEL,GAAG,EACHK,MAAM,KApCG,mBAwCRiB,EAxCQ,KAwCKC,EAxCL,KA0CTC,EAAS,SAACxB,GACduB,EACED,EAAYR,KAAI,SAAAf,GACd,OAAGA,EAAKC,KAAOA,EACN,2BAAID,GAAX,IAAiBM,MAAON,EAAKM,OAEtBN,OAKf,OACE,yBAAKY,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACZW,EAAYR,KAAI,SAACf,GAChB,OAAO,kBAAC,EAAD,CAAQA,KAAMA,EAAM0B,IAAK1B,EAAKC,GAAIF,WAAY0B,SAI3D,kBAAC,EAAD,CAASzB,KAAMuB,EAAaV,IAAKW,MC9DrCG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8516f17b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Blocks(props){\r\n  \r\n  return (\r\n    <div style={{float: 'left'}}>\r\n      <div \r\n        onClick={()=>{props.clickTitle(props.item.id)}}\r\n        style={{\r\n          width: 100,\r\n          height: 100,\r\n          border: '1px Solid blue',\r\n          backgroundColor: props.item.show ? 'white' : 'black',\r\n          margin: 10,\r\n        }}\r\n      > \r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default Blocks;","import React from 'react'\r\n\r\nfunction Reset(props){\r\n\r\n  const blockReset = props.item\r\n\r\n  return <div>\r\n    {blockReset.length === 0 && \r\n      <button\r\n        style={{marginTop: 10}} \r\n        className='btn btn-primary' \r\n        onClick={()=>{\r\n          props.set(\r\n            props.block.map((item)=>{\r\n              return {...item, show: true}\r\n            })\r\n          )\r\n        }}\r\n      >\r\n        Начать заново\r\n      </button> \r\n    }\r\n  </div>\r\n}\r\nexport default Reset","import React from 'react'\r\nimport Reset from './Reset'\r\n\r\nfunction Counter(props){\r\n\r\n  const newCheck = props.item.filter((item)=>{\r\n    if (item.show === true) {\r\n      return true;\r\n    }\r\n      return false;\r\n    });\r\n\r\n  return <div>\r\n    <div style={{\r\n      border:'1px Solid black',\r\n      padding: 15,\r\n      fontSize: 20,\r\n      marginTop: 10,\r\n      width: 300\r\n    }}>\r\n      Осталось открыть: {newCheck.length}\r\n    </div>\r\n    <div>\r\n      <Reset item={newCheck} set={props.set} block={props.item} />\r\n    </div>\r\n  </div>\r\n}\r\nexport default Counter","import React, { useState } from \"react\";\r\nimport Blocks from \"./Blocks\";\r\nimport Counter from \"./Counter\"\r\n\r\nfunction App() {\r\n  const database = [\r\n    {\r\n      id: 1,\r\n      show: true\r\n    },\r\n    {\r\n      id:2,\r\n      show: true\r\n    },\r\n    {\r\n      id:3,\r\n      show: true\r\n    },\r\n    {\r\n      id:4,\r\n      show: true\r\n    },\r\n    {\r\n      id:5,\r\n      show: true\r\n    },\r\n    {\r\n      id:6,\r\n      show: true\r\n    },\r\n    {\r\n      id:7,\r\n      show: true\r\n    },\r\n    {\r\n      id:8,\r\n      show: true\r\n    },\r\n    {\r\n      id:9,\r\n      show: true\r\n    },\r\n  ];\r\n  \r\nconst [baseToPrint, setBaseToPrint] = useState(database);\r\n\r\nconst toggle = (id) => {\r\n  setBaseToPrint (\r\n    baseToPrint.map(item =>{\r\n      if(item.id === id){\r\n        return {...item, show: !item.show}\r\n      }\r\n        return item;\r\n    })\r\n  )\r\n}\r\n\r\nreturn (\r\n  <div className='container'>\r\n    <div className='row'>\r\n      <div className='col-5'>\r\n        {baseToPrint.map((item)=>{\r\n          return <Blocks item={item} key={item.id} clickTitle={toggle} />\r\n        })}\r\n      </div>\r\n    </div>\r\n    <Counter item={baseToPrint} set={setBaseToPrint} />\r\n  </div>\r\n)\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}